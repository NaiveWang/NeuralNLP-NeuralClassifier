import socket
import sys
msg='{"doc_label": ["news_investment"], "doc_token": ["中", "南", "今", "日", "上", "涨", "4", "7", "9", "%", "，", "股", "价", "为", "1", "5", "3", "元", "，", "成", "交", "金", "额", "为", "万", "元", "，", "成", "交", "3", "5", "万", "手", "，", "换", "手", "率", "为", "2", "8", "0", "%", "。", "海", "豚", "股", "票", "A", "P", "P", "操", "盘", "线", "走", "势", "解", "析", "：", "C", "E", "目", "前", "处", "于", "上", "升", "趋", "势", "中", "，", "短", "期", "走", "势", "强", "于", "大", "盘", "。", "放", "量", "上", "涨", "，", "交", "投", "保", "持", "活", "跃", "。", "主", "力", "资", "金", "方", "面", "：", "当", "日", "净", "流", "入", "4", "4", "4", "2", "9", "万", "，", "近", "三", "日", "净", "流", "入", "5", "7", "8", "4", "万", "。", "公", "司", "主", "营", "业", "务", "：", "公", "司", "目", "前", "主", "营", "业", "务", "已", "由", "原", "有", "的", "制", "造", "业", "务", "逐", "渐", "转", "型", "为", "文", "化", "传", "媒", "业", "务", "。", "截", "至", "2", "0", "1", "9", "年", "0", "6", "月", "3", "0", "日", "，", "S", "T", "中", "南", "营", "业", "收", "入", "3", "3", "2", "亿", "元", "，", "较", "去", "年", "同", "比", "下", "跌", "4", "3", "5", "3", "%", "，", "归", "属", "于", "母", "公", "司", "股", "东", "的", "净", "利", "润", "1", "4", "1", "亿", "元", "，", "较", "去", "年", "同", "比", "下", "跌", "4", "0", "8", "5", "2", "%", "。", "中", "南", "(", ")", "9", "月", "1", "1", "日", "走", "势", "分", "析", "?", "l", "r", "k", "5", "f", "&", "a", "m", "p", ";", "a", "1", "E", "点", "击", "下", "载", "海", "豚", "股", "票", "A", "P", "P", "，", "智", "能", "盯", "盘", "终", "身", "免", "费", "体", "验", "免", "责", "声", "明", "：", "本", "页", "面", "所", "有", "内", "容", "仅", "供", "投", "资", "者", "参", "考", "，", "不", "构", "成", "任", "何", "投", "资", "建", "议", "。"], "doc_keyword": [], "doc_topic": []}'
def infer(j_text):
    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    service=('localhost', 4444)
    sock.connect(service)
    sock.sendall(j_text.encode('utf-8'))
    result=''
    sock.send(b'\002'*4)
    while True:
        #print('%')
        recv = sock.recv(16)
        if recv:
            result+=recv.decode("utf-8", "ignore")
        else:
            break
    sock.close()
    #print(j_text, result)
    return result
#while True:
#    print(infer(msg))
